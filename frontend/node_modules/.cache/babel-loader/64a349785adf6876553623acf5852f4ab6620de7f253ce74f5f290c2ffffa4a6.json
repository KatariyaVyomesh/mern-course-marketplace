{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:5000/api\";\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Course API\nexport const courseAPI = {\n  getAllCourses: (params = {}) => api.get(\"/courses\", {\n    params\n  }),\n  getCourseById: id => api.get(`/courses/${id}`),\n  createCourse: courseData => api.post(\"/courses\", courseData),\n  updateCourse: (id, courseData) => api.put(`/courses/${id}`, courseData),\n  deleteCourse: id => api.delete(`/courses/${id}`)\n};\n\n// User API\nexport const userAPI = {\n  getAllUsers: () => api.get(\"/users\"),\n  getUserById: id => api.get(`/users/${id}`),\n  updateUser: (id, userData) => api.put(`/users/${id}`, userData),\n  enrollInCourse: (userId, courseId) => api.post(`/users/${userId}/enroll/${courseId}`)\n};\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post(\"/auth/login\", credentials),\n  register: userData => api.post(\"/auth/register\", userData),\n  getProfile: () => api.get(\"/auth/profile\")\n};\n\n// Enrollment API\nexport const enrollmentAPI = {\n  createEnrollment: enrollmentData => api.post(\"/enrollments\", enrollmentData),\n  getUserEnrollments: userId => api.get(`/enrollments/user/${userId}`),\n  getCourseEnrollments: courseId => api.get(`/enrollments/course/${courseId}`),\n  getEnrollmentById: id => api.get(`/enrollments/${id}`),\n  updateEnrollmentProgress: (id, progressData) => api.put(`/enrollments/${id}/progress`, progressData),\n  deleteEnrollment: id => api.delete(`/enrollments/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","courseAPI","getAllCourses","params","get","getCourseById","id","createCourse","courseData","post","updateCourse","put","deleteCourse","delete","userAPI","getAllUsers","getUserById","updateUser","userData","enrollInCourse","userId","courseId","authAPI","login","credentials","register","getProfile","enrollmentAPI","createEnrollment","enrollmentData","getUserEnrollments","getCourseEnrollments","getEnrollmentById","updateEnrollmentProgress","progressData","deleteEnrollment"],"sources":["D:/course-platform/course-platform/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\"\n\nconst API_BASE_URL = \"http://localhost:5000/api\"\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n})\n\n// Add token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem(\"token\")\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`\n  }\n  return config\n})\n\n// Course API\nexport const courseAPI = {\n  getAllCourses: (params = {}) => api.get(\"/courses\", { params }),\n  getCourseById: (id) => api.get(`/courses/${id}`),\n  createCourse: (courseData) => api.post(\"/courses\", courseData),\n  updateCourse: (id, courseData) => api.put(`/courses/${id}`, courseData),\n  deleteCourse: (id) => api.delete(`/courses/${id}`),\n}\n\n// User API\nexport const userAPI = {\n  getAllUsers: () => api.get(\"/users\"),\n  getUserById: (id) => api.get(`/users/${id}`),\n  updateUser: (id, userData) => api.put(`/users/${id}`, userData),\n  enrollInCourse: (userId, courseId) => api.post(`/users/${userId}/enroll/${courseId}`),\n}\n\n// Auth API\nexport const authAPI = {\n  login: (credentials) => api.post(\"/auth/login\", credentials),\n  register: (userData) => api.post(\"/auth/register\", userData),\n  getProfile: () => api.get(\"/auth/profile\"),\n}\n\n// Enrollment API\nexport const enrollmentAPI = {\n  createEnrollment: (enrollmentData) => api.post(\"/enrollments\", enrollmentData),\n  getUserEnrollments: (userId) => api.get(`/enrollments/user/${userId}`),\n  getCourseEnrollments: (courseId) => api.get(`/enrollments/course/${courseId}`),\n  getEnrollmentById: (id) => api.get(`/enrollments/${id}`),\n  updateEnrollmentProgress: (id, progressData) => api.put(`/enrollments/${id}/progress`, progressData),\n  deleteEnrollment: (id) => api.delete(`/enrollments/${id}`),\n}\n\nexport default api\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;;AAEF;AACAC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMM,SAAS,GAAG;EACvBC,aAAa,EAAEA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAKd,GAAG,CAACe,GAAG,CAAC,UAAU,EAAE;IAAED;EAAO,CAAC,CAAC;EAC/DE,aAAa,EAAGC,EAAE,IAAKjB,GAAG,CAACe,GAAG,CAAC,YAAYE,EAAE,EAAE,CAAC;EAChDC,YAAY,EAAGC,UAAU,IAAKnB,GAAG,CAACoB,IAAI,CAAC,UAAU,EAAED,UAAU,CAAC;EAC9DE,YAAY,EAAEA,CAACJ,EAAE,EAAEE,UAAU,KAAKnB,GAAG,CAACsB,GAAG,CAAC,YAAYL,EAAE,EAAE,EAAEE,UAAU,CAAC;EACvEI,YAAY,EAAGN,EAAE,IAAKjB,GAAG,CAACwB,MAAM,CAAC,YAAYP,EAAE,EAAE;AACnD,CAAC;;AAED;AACA,OAAO,MAAMQ,OAAO,GAAG;EACrBC,WAAW,EAAEA,CAAA,KAAM1B,GAAG,CAACe,GAAG,CAAC,QAAQ,CAAC;EACpCY,WAAW,EAAGV,EAAE,IAAKjB,GAAG,CAACe,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;EAC5CW,UAAU,EAAEA,CAACX,EAAE,EAAEY,QAAQ,KAAK7B,GAAG,CAACsB,GAAG,CAAC,UAAUL,EAAE,EAAE,EAAEY,QAAQ,CAAC;EAC/DC,cAAc,EAAEA,CAACC,MAAM,EAAEC,QAAQ,KAAKhC,GAAG,CAACoB,IAAI,CAAC,UAAUW,MAAM,WAAWC,QAAQ,EAAE;AACtF,CAAC;;AAED;AACA,OAAO,MAAMC,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAKnC,GAAG,CAACoB,IAAI,CAAC,aAAa,EAAEe,WAAW,CAAC;EAC5DC,QAAQ,EAAGP,QAAQ,IAAK7B,GAAG,CAACoB,IAAI,CAAC,gBAAgB,EAAES,QAAQ,CAAC;EAC5DQ,UAAU,EAAEA,CAAA,KAAMrC,GAAG,CAACe,GAAG,CAAC,eAAe;AAC3C,CAAC;;AAED;AACA,OAAO,MAAMuB,aAAa,GAAG;EAC3BC,gBAAgB,EAAGC,cAAc,IAAKxC,GAAG,CAACoB,IAAI,CAAC,cAAc,EAAEoB,cAAc,CAAC;EAC9EC,kBAAkB,EAAGV,MAAM,IAAK/B,GAAG,CAACe,GAAG,CAAC,qBAAqBgB,MAAM,EAAE,CAAC;EACtEW,oBAAoB,EAAGV,QAAQ,IAAKhC,GAAG,CAACe,GAAG,CAAC,uBAAuBiB,QAAQ,EAAE,CAAC;EAC9EW,iBAAiB,EAAG1B,EAAE,IAAKjB,GAAG,CAACe,GAAG,CAAC,gBAAgBE,EAAE,EAAE,CAAC;EACxD2B,wBAAwB,EAAEA,CAAC3B,EAAE,EAAE4B,YAAY,KAAK7C,GAAG,CAACsB,GAAG,CAAC,gBAAgBL,EAAE,WAAW,EAAE4B,YAAY,CAAC;EACpGC,gBAAgB,EAAG7B,EAAE,IAAKjB,GAAG,CAACwB,MAAM,CAAC,gBAAgBP,EAAE,EAAE;AAC3D,CAAC;AAED,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}